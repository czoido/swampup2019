#!/usr/bin/env groovy

def GO_MOD_REPO = "go"
def GO_BIN_REPO = "gi-binaries"
def SERVER_URL = "http://192.168.1.136:8081/artifactory"
def BUILD_NAME = JOB_NAME
def BUILD_NUMBER = env.BUILD_NUMBER

node {
    
    env.GOPATH = "${pwd()}/GOPATH"
    
    stage ('Clone') {
        cleanWs()

        git url: 'https://github.com/czoido/swampup2019', branch : 'gophercon'

        dir('su-121-golang-cicd/go-app/src') {
            git url: 'https://github.com/czoido/go-swampup-service', branch: 'gophercon'
        }
    }
    
    stage ('Setup Artifactory') {
        sh "printenv"
        echo "config artifactory cli"
        withCredentials([usernamePassword(credentialsId: 'artifactory', usernameVariable: 'USERNAME', passwordVariable: 'PASSWORD')]) {
            sh 'echo $PASSWORD'
            sh 'echo $USERNAME'
            sh "jfrog rt config --url ${SERVER_URL} --user ${env.USERNAME} --password ${env.PASSWORD}"
          }
    }
    
    stage ('Build Module') {
        dir('su-121-golang-cicd/go-app/src') {
            sh "go env"
            sh "jfrog rt go build $GO_MOD_REPO --build-name=$BUILD_NAME --build-number=$BUILD_NUMBER --module=modules" 
        }
    }
    
    stage ('Publish Module') {
        dir('su-121-golang-cicd/go-app/src') {
            sh "jfrog rt gp go v1.2.$BUILD_NUMBER --build-name=$BUILD_NAME --build-number=$BUILD_NUMBER --module=modules"
        }
    }
    
    stage ('Publish Binary') {
        dir('su-121-golang-cicd/go-app/src') {
            sh "jfrog rt u --build-name=$BUILD_NAME --build-number=$BUILD_NUMBER --module=binaries go-swampup-service go-binaries/jfrog/go-swampup-service/go-swampup-service-linux-x86-1.2.${BUILD_NUMBER}.bin"
        }
    }
    
    stage ('Publish BuildInfo') {
        sh "jfrog rt bce $BUILD_NAME $BUILD_NUMBER"
        sh "jfrog rt bp $BUILD_NAME $BUILD_NUMBER"
    }
}
